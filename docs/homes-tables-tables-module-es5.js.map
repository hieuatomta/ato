{"version":3,"sources":["webpack:///src/app/admin/homes/tables/tree-grid/tree-grid.component.ts","webpack:///src/app/admin/homes/tables/tree-grid/tree-grid.component.html","webpack:///src/app/admin/homes/tables/tables.module.ts","webpack:///src/app/admin/homes/tables/smart-table/smart-table.component.ts","webpack:///src/app/admin/homes/tables/smart-table/smart-table.component.html","webpack:///src/app/admin/homes/tables/tables.component.ts","webpack:///src/app/admin/homes/tables/tables-routing.module.ts"],"names":["TreeGridComponent","dataSourceBuilder","customColumn","defaultColumns","allColumns","sortDirection","NONE","data","name","size","items","kind","children","dataSource","create","sortRequest","sortColumn","column","direction","index","minWithForMultipleColumns","nextColumnStep","updateSort","FsIconComponent","selector","templateUrl","styleUrls","template","TablesModule","imports","declarations","SmartTableComponent","service","settings","add","addButtonContent","createButtonContent","cancelButtonContent","edit","editButtonContent","saveButtonContent","deleteButtonContent","confirmDelete","columns","id","title","type","firstName","lastName","username","email","age","source","getData","load","event","window","confirm","resolve","reject","onDeleteConfirm","TablesComponent","routes","path","component","TablesRoutingModule","forChild","exports","routedComponents"],"mappings":"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","file":"homes-tables-tables-module-es5.js","sourcesContent":["import {Component, Input} from '@angular/core';\nimport {NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder} from '@nebular/theme';\n\ninterface TreeNode<T> {\n  data: T;\n  children?: TreeNode<T>[];\n  expanded?: boolean;\n}\n\ninterface FSEntry {\n  name: string;\n  size: string;\n  kind: string;\n  items?: number;\n}\n\n@Component({\n  selector: 'ngx-tree-grid',\n  templateUrl: './tree-grid.component.html',\n  styleUrls: ['./tree-grid.component.scss'],\n})\nexport class TreeGridComponent {\n  customColumn = 'name';\n  defaultColumns = [ 'size', 'kind', 'items' ];\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\n\n  dataSource: NbTreeGridDataSource<FSEntry>;\n\n  sortColumn: string;\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\n\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>) {\n    this.dataSource = this.dataSourceBuilder.create(this.data);\n  }\n\n  updateSort(sortRequest: NbSortRequest): void {\n    this.sortColumn = sortRequest.column;\n    this.sortDirection = sortRequest.direction;\n  }\n\n  getSortDirection(column: string): NbSortDirection {\n    if (this.sortColumn === column) {\n      return this.sortDirection;\n    }\n    return NbSortDirection.NONE;\n  }\n\n  private data: TreeNode<FSEntry>[] = [\n    {\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\n      children: [\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\n        { data: { name: 'project-3', kind: 'txt', size: '466 KB' } },\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\n      ],\n    },\n    {\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\n      children: [\n        { data: { name: 'Report 1', kind: 'doc', size: '100 KB' } },\n        { data: { name: 'Report 2', kind: 'doc', size: '300 KB' } },\n      ],\n    },\n    {\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\n      children: [\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\n      ],\n    },\n  ];\n\n  getShowOn(index: number) {\n    const minWithForMultipleColumns = 400;\n    const nextColumnStep = 100;\n    return minWithForMultipleColumns + (nextColumnStep * index);\n  }\n}\n\n@Component({\n  selector: 'ngx-fs-icon',\n  template: `\n    <nb-tree-grid-row-toggle [expanded]=\"expanded\" *ngIf=\"isDir(); else fileIcon\">\n    </nb-tree-grid-row-toggle>\n    <ng-template #fileIcon>\n      <nb-icon icon=\"file-text-outline\"></nb-icon>\n    </ng-template>\n  `,\n})\nexport class FsIconComponent {\n  @Input() kind: string;\n  @Input() expanded: boolean;\n\n  isDir(): boolean {\n    return this.kind === 'dir';\n  }\n}\n","<nb-card>\n  <nb-card-body>\n\n    <label class=\"search-label\" for=\"search\">Search:</label>\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\n\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\n\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\n\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\n          {{customColumn}}\n        </th>\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\n          <ngx-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></ngx-fs-icon>\n          {{row.data[customColumn]}}\n        </td>\n      </ng-container>\n\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\n                    [nbTreeGridColumnDef]=\"column\"\n                    [showOn]=\"getShowOn(index)\">\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\n          {{column}}\n        </th>\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column] || '-'}}</td>\n      </ng-container>\n\n    </table>\n\n  </nb-card-body>\n</nb-card>\n","import {NgModule} from '@angular/core';\nimport {NbCardModule, NbIconModule, NbInputModule, NbTreeGridModule} from '@nebular/theme';\nimport {Ng2SmartTableModule} from 'ng2-smart-table';\n\nimport {ThemeModule} from '../../../@theme/theme.module';\nimport {routedComponents, TablesRoutingModule} from './tables-routing.module';\nimport {FsIconComponent} from './tree-grid/tree-grid.component';\n\n@NgModule({\n  imports: [\n    NbCardModule,\n    NbTreeGridModule,\n    NbIconModule,\n    NbInputModule,\n    ThemeModule,\n    TablesRoutingModule,\n    Ng2SmartTableModule,\n  ],\n  declarations: [\n    ...routedComponents,\n    FsIconComponent,\n  ],\n})\nexport class TablesModule { }\n","import {Component} from '@angular/core';\nimport {LocalDataSource} from 'ng2-smart-table';\n\nimport {SmartTableData} from '../../../../@core/data/smart-table';\n\n@Component({\n  selector: 'ngx-smart-table',\n  templateUrl: './smart-table.component.html',\n  styleUrls: ['./smart-table.component.scss'],\n})\nexport class SmartTableComponent {\n\n  settings = {\n    add: {\n      addButtonContent: '<i class=\"nb-plus\"></i>',\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    edit: {\n      editButtonContent: '<i class=\"nb-edit\"></i>',\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\n    },\n    delete: {\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\n      confirmDelete: true,\n    },\n    columns: {\n      id: {\n        title: 'ID',\n        type: 'number',\n      },\n      firstName: {\n        title: 'First Name',\n        type: 'string',\n      },\n      lastName: {\n        title: 'Last Name',\n        type: 'string',\n      },\n      username: {\n        title: 'Username',\n        type: 'string',\n      },\n      email: {\n        title: 'E-mail',\n        type: 'string',\n      },\n      age: {\n        title: 'Age',\n        type: 'number',\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n\n  constructor(private service: SmartTableData) {\n    const data = this.service.getData();\n    this.source.load(data);\n  }\n\n  onDeleteConfirm(event): void {\n    if (window.confirm('Are you sure you want to delete?')) {\n      event.confirm.resolve();\n    } else {\n      event.confirm.reject();\n    }\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    Smart Table\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngx-tables',\n  template: `<router-outlet></router-outlet>`,\n})\nexport class TablesComponent {\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {TablesComponent} from './tables.component';\nimport {SmartTableComponent} from './smart-table/smart-table.component';\nimport {TreeGridComponent} from './tree-grid/tree-grid.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: TablesComponent,\n  children: [\n    {\n      path: 'smart-table',\n      component: SmartTableComponent,\n    },\n    {\n      path: 'tree-grid',\n      component: TreeGridComponent,\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TablesRoutingModule { }\n\nexport const routedComponents = [\n  TablesComponent,\n  SmartTableComponent,\n  TreeGridComponent,\n];\n"]}