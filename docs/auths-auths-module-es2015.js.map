{"version":3,"sources":["./src/app/auths/logins/login.component.ts","./src/app/auths/logins/login.component.html","./src/app/auths/auths.module.ts","./src/app/auths/confirmEmail/confirmEmail.component.ts","./src/app/auths/confirmEmail/confirmEmail.component.html","./src/app/auths/auths.component.ts","./src/app/auths/changePass/changePass.component.ts","./src/app/auths/changePass/changePass.component.html","./src/app/auths/auths-routing.module.ts","./src/app/auths/changePassEmail/changePassEmail.component.ts","./src/app/auths/changePassEmail/changePassEmail.component.html"],"names":[],"mappings":"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","file":"auths-auths-module-es2015.js","sourcesContent":["import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ToastrService} from '../../@core/mock/toastr-service';\nimport {checkUser, notSpaceLogin} from '../../validator';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {LoginService} from '../../@core/services/login.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'ngx-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\n\n\nexport class LoginComponent implements OnInit {\n  ngOnInit() {\n    this.initForm();\n  }\n\n  constructor(private loginService: LoginService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private translateService: TranslateService,\n              private toastr: ToastrService) {\n\n  }\n\n\n  captchaError: boolean = false;\n  inputUser: FormGroup;\n  data: any;\n  isLoad: boolean;\n  submitted = false;\n  showPassword = false;\n\n  initForm() {\n    this.inputUser = new FormGroup({\n      name: new FormControl(this.getCookie('name'), [checkUser, Validators.maxLength(50), Validators.required]),\n      pass: new FormControl(this.getCookie('pass'), [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n      remember: new FormControl(this.getCookie('remember'), []),\n      // recaptchaReactive: new FormControl(null, [Validators.required])\n    });\n  }\n\n  hideLogin = () => {\n    document.querySelector('.modal').classList.add('is-open');\n    document.querySelector('body').style.overflow = 'hidden';\n  };\n\n  trimValue(event) {\n    event.target.value = event.target.value.trim();\n  }\n\n  getInputType() {\n    if (this.showPassword) {\n      return 'text';\n    }\n    return 'password';\n  }\n\n  toggleShowPassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  onSubmit() {\n    this.isLoad = true;\n    this.submitted = true;\n    this.captchaError = true;\n    if (this.inputUser.valid) {\n      if (this.inputUser.value.remember) {\n        document.cookie = 'name=' + this.inputUser.value.name;\n        document.cookie = 'pass=' + this.inputUser.value.pass;\n        document.cookie = 'remember=' + true;\n      } else {\n        document.cookie = 'name=' + '';\n        document.cookie = 'pass=' + '';\n        document.cookie = 'remember=' + false;\n      }\n      this.loginService.login(this.inputUser.value).subscribe(res => {\n        this.submitted = false;\n        if (res.status === 200) {\n          console.log(res);\n          this.router.navigate(['/admin/home']);\n          localStorage.setItem('objects', JSON.stringify(res.body.listObjects));\n          localStorage.setItem('httpHeaders', res.body.httpHeaders.Authorization);\n          localStorage.setItem('users', res.body.customUserDetails.fullname);\n          localStorage.setItem('userDetails', JSON.stringify(res.body.customUserDetails));\n          this.isLoad = false;\n          this.captchaError = false;\n\n        }\n      }, err => {\n        const title = this.translateService.instant('login.error');\n        let body1: any;\n        try {\n          body1 = err.error.detail;\n        } catch {\n          body1 = '';\n        } finally {\n          this.isLoad = false;\n          this.captchaError = false;\n          this.toastr.showToast('danger', title, body1);\n          // grecaptcha.reset();\n        }\n      });\n    } else {\n      this.isLoad = false;\n    }\n  }\n\n  getCookie(cname) {\n    const name = cname + '=';\n    const decodedCookie = decodeURIComponent(document.cookie);\n    const ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return '';\n  }\n}\n","<div class=\"container-login100\" [nbSpinner]=\"isLoad\" nbSpinnerSize=\"giant\" nbSpinnerStatus=\"primary\"\n     style=\"background-image: url('assets/images/bg-01.jpg');\">\n  <div class=\"modal is-open\">\n    <div class=\"modal-container\">\n      <div class=\"modal-left\" style=\" margin-bottom: 5vh;\">\n        <h1 class=\"modal-title\" style=\"color: #292D34; text-align: center; margin-bottom: 5vh;\">{{ 'login.title' | translate}}</h1>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"inputUser\">\n          <div class=\"form-group\">\n            <div class=\"input-icon\">\n              <input class=\"form-control\" name=\"name\" formControlName=\"name\" (keyup)=\"trimValue($event)\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('name').errors}\" type=\"text\"\n                     placeholder=\"{{ 'login.name' | translate}}\">\n              <span class=\"icon\"><img src=\"assets/images/business-contact-86.svg\"></span>\n            </div>\n\n          </div>\n          <ngx-inline-message [message]=\"'login.name'|translate\"\n                              [formName]=\"inputUser.get('name')\"></ngx-inline-message>\n          <div class=\"form-group\">-->\n            <div class=\"input-icon -show\">\n              <input [type]=\"getInputType()\" name=\"pass\" (keyup)=\"trimValue($event)\" fullWidth\n                     formControlName=\"pass\" type=\"password\" class=\"form-control\"\n                     placeholder=\"{{ 'login.pass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('pass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span id=\"passwordShow\" (click)=\"toggleShowPassword()\" class=\"icon-show fa  fa-eye\"\n                    style=\"margin-right:1em;\">\n              \t\t\t\t\t\t\t\t</span>\n            </div>\n            <ngx-inline-message [message]=\"'login.pass'|translate\"\n                                [formName]=\"inputUser.get('pass')\"></ngx-inline-message>\n          </div>\n\n          <div class=\"form-group form-check\" style=\"margin-top: 0.5rem;\">\n            <input type=\"checkbox\" name=\"remember\" id=\"remember\" formControlName=\"remember\"\n                   class=\"form-check-input\"/>\n            <label for=\"remember\" class=\"form-check-label\"\n                   style=\"color: #292D34 !important;justify-content: center;\">{{ 'login.remember' | translate}}</label>\n          </div>\n<!--          <div class=\"form-group\">-->\n<!--            <re-captcha style=\"display: flex; justify-content: center;\"-->\n<!--                        formControlName=\"recaptchaReactive\"></re-captcha>-->\n<!--          </div>-->\n<!--          <ngx-inline-message [message]=\"'login.recaptchaReactive'|translate\"-->\n<!--                              [formName]=\"inputUser.get('recaptchaReactive')\"></ngx-inline-message>-->\n          <div class=\"modal-buttons\">\n            <a routerLink=\"/auths/confirmEmail\">{{ 'login.confirmEmail' | translate}}</a>\n            <button class=\"btn btn-main\" [disabled]=\"inputUser.invalid\">{{ 'login.login' | translate}}</button>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-right\">\n        <img\n          src=\"https://images.unsplash.com/photo-1512486130939-2c4f79935e4f?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=dfd2ec5a01006fd8c4d7592a381d3776&auto=format&fit=crop&w=1000&q=80\"\n          alt=\"\">\n      </div>\n    </div>\n\n  </div>\n</div>\n\n","import {NgModule} from '@angular/core';\nimport {\n  NbAlertModule,\n  NbCardModule,\n  NbCheckboxModule,\n  NbIconModule,\n  NbInputModule,\n  NbLayoutModule,\n  NbMenuModule,\n  NbSpinnerModule,\n} from '@nebular/theme';\n\nimport {ThemeModule} from '../@theme/theme.module';\nimport {AuthsRoutingModule} from './auths-routing.module';\nimport {LoginComponent} from './logins/login.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AuthsComponent} from './auths.component';\nimport {ConfirmEmailComponent} from './confirmEmail/confirmEmail.component';\nimport {ChangePassEmailComponent} from './changePassEmail/changePassEmail.component';\nimport {RECAPTCHA_SETTINGS, RecaptchaFormsModule, RecaptchaModule, RecaptchaSettings} from 'ng-recaptcha';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {SharedModule} from '../shares/shared.module';\nimport { ChangePassComponent } from './changePass/changePass.component';\n\n\n@NgModule({\n  imports: [\n    AuthsRoutingModule,\n    ThemeModule,\n    NbMenuModule,\n    NbCardModule,\n    NbAlertModule,\n    FormsModule,\n    NbInputModule,\n    NbCheckboxModule,\n    NbIconModule,\n    ReactiveFormsModule,\n    NbLayoutModule,\n    NbSpinnerModule,\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    SharedModule,\n  ],\n  declarations: [\n    ChangePassComponent,\n    LoginComponent,\n    AuthsComponent,\n    ConfirmEmailComponent,\n    ChangePassEmailComponent,\n  ],\n  providers: [\n    {\n      provide: RECAPTCHA_SETTINGS,\n      useValue: {\n        siteKey: '6Ldch8gZAAAAAOAujSVYWFyoWkTaNgBNzE6qyxwg',\n      } as RecaptchaSettings,\n    }]\n})\nexport class AuthsModule {\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ToastrService} from '../../@core/mock/toastr-service';\nimport {validEmail} from '../../validator';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LoginService} from '../../@core/services/login.service';\n\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'ngx-confirm-email',\n  templateUrl: './confirmEmail.component.html',\n  styleUrls: ['./confirmEmail.component.scss'],\n})\n\n\nexport class ConfirmEmailComponent implements OnInit {\n\n\n  constructor(private http: LoginService,\n              private toastr: ToastrService,\n              private translateService: TranslateService,\n              private router: Router) {\n\n  }\n\n  inputUser: FormGroup;\n  data: any;\n  isLoad: boolean;\n  body: any;\n  submitted = false;\n\n  initForm() {\n    this.inputUser = new FormGroup({\n      email: new FormControl('', [validEmail, Validators.required]),\n    });\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  trimValue(event) {\n    event.target.value = event.target.value.trim();\n  }\n\n  onSubmit() {\n    this.isLoad = true;\n    this.submitted = true;\n    if (this.inputUser.valid) {\n      this.http.sendSimpleEmail(this.inputUser.value).subscribe(res => {\n        if (res.status === 200) {\n          this.submitted = false;\n          this.isLoad = false;\n          try {\n            this.body = res.body.data;\n          } catch {\n            this.body = '';\n          }\n          this.toastr.showToast('success', this.translateService.instant('login.notification'), this.body);\n          this.router.navigate(['auths/login']);\n\n        }\n      }, err => {\n        const title = this.translateService.instant('login.error');\n        let body: any;\n        try {\n          body = err.error.detail;\n        } catch {\n          body = '';\n        } finally {\n          this.isLoad = false;\n          this.toastr.showToast('danger', title, body);\n        }\n      });\n    } else {\n      this.isLoad = false;\n    }\n  }\n}\n","<div class=\"container-login100\" [nbSpinner]=\"isLoad\" nbSpinnerSize=\"giant\" nbSpinnerStatus=\"primary\"\n     style=\"background-image: url('assets/images/bg-01.jpg');\">\n  <div class=\"modal is-open\">\n\n    <div class=\"modal-container\">\n      <div class=\"modal-left\" style=\" margin-bottom: 5vh;\">\n        <h1 class=\"modal-title\"\n            style=\"color: #292D34; text-align: center; margin-bottom: 5vh;\">{{ 'login.title' | translate}}</h1>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"inputUser\">\n          <div class=\"form-group\">-->\n            <div class=\"input-icon\">\n              <input class=\"form-control\" formControlName=\"email\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('email').errors}\" type=\"text\"\n                     placeholder=\"{{ 'login.email' | translate}}\">\n              <span class=\"icon\" style=\"width: 18px;\"><img src=\"assets/images/gmail.svg\"></span>\n            </div>\n          </div>\n          <ngx-inline-message [message]=\"'login.emailC'|translate\"\n                              [formName]=\"inputUser.get('email')\"></ngx-inline-message>\n          <div class=\"modal-buttons\" style=\"margin-top: 2em;\">\n            <a routerLink=\"/auths/login\">{{ 'login.login' | translate}}</a>\n            <button class=\"btn btn-main\" [disabled]=\"inputUser.invalid\">{{ 'login.sendEmail' | translate}}</button>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-right\">\n        <img\n          src=\"https://images.unsplash.com/photo-1512486130939-2c4f79935e4f?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=dfd2ec5a01006fd8c4d7592a381d3776&auto=format&fit=crop&w=1000&q=80\"\n          alt=\"\">\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n","import {Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ngx-auths',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ngx-two-columns-layout>\n      <router-outlet></router-outlet>\n      </ngx-two-columns-layout>\n  `,\n})\nexport class AuthsComponent  {\n}\n\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ToastrService} from '../../@core/mock/toastr-service';\nimport {checkUser, notSpaceLogin, validPassword} from '../../validator';\nimport {Router} from '@angular/router';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {LoginService} from '../../@core/services/login.service';\n\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'ngx-login',\n  templateUrl: './changePass.component.html',\n  styleUrls: ['./changePass.component.scss'],\n})\n\n\nexport class ChangePassComponent implements OnInit {\n\n  inputUser: FormGroup;\n  data: any;\n  body: any;\n  submitted = false;\n  isLoad: boolean;\n\n\n  constructor(private http: LoginService,\n              private toastr: ToastrService,\n              private translateService: TranslateService,\n              private router: Router) {\n\n  }\n\n  showPassword = false;\n  showPassword1 = false;\n  showPassword2 = false;\n\n  getInputType(a: number) {\n    if (a === 1) {\n      if (this.showPassword) {\n        return 'text';\n      }\n    }\n    if (a === 2) {\n      if (this.showPassword1) {\n        return 'text';\n      }\n    }\n    if (a === 3) {\n      if (this.showPassword2) {\n        return 'text';\n      }\n    }\n    return 'password';\n  }\n\n  toggleShowPassword(a: number) {\n    if (a === 1) {\n      this.showPassword = !this.showPassword;\n    }\n    if (a === 2) {\n      this.showPassword1 = !this.showPassword1;\n    }\n    if (a === 3) {\n      this.showPassword2 = !this.showPassword2;\n    }\n  }\n\n  trimValue(event) {\n    event.target.value = event.target.value.trim();\n  }\n\n  initForm() {\n    this.inputUser = new FormGroup({\n        userName: new FormControl(this.data?.userName, [checkUser, Validators.maxLength(50), Validators.required]),\n        oldPass: new FormControl('', [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n        newPass: new FormControl('', [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n        comPass: new FormControl('', [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n      },\n      {\n        validators: validPassword,\n      });\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  onSubmit() {\n    this.isLoad = true;\n    this.submitted = true;\n    if (this.inputUser.valid) {\n      this.http.changePass(this.inputUser.value).subscribe(res => {\n        if (res.status === 200) {\n          this.submitted = false;\n          try {\n            this.body = res.body.data;\n          } catch {\n            this.body = '';\n          } finally {\n            this.isLoad = false;\n          }\n          this.toastr.showToast('success', this.translateService.instant('login.notification'), this.body);\n          this.router.navigate(['auths/login']);\n        }\n      }, err => {\n        const title = this.translateService.instant('login.error');\n        try {\n          this.body = err.error.detail;\n        } catch {\n          this.body = '';\n        } finally {\n          this.isLoad = false;\n        }\n        this.toastr.showToast('danger', title, this.body);\n      });\n    } else {\n      this.isLoad = false;\n    }\n  }\n\n}\n","<!--<div class=\"wrapper-login\" [nbSpinner]=\"isLoad\" nbSpinnerSize=\"giant\" nbSpinnerStatus=\"primary\"-->\n<!--     style=\"background-image: url('assets/images/bg.jpg');\">-->\n<!--  <div class=\"bg\" style=\"background-image: url('assets/images/bg.jpg');\"></div>-->\n<!--  <div class=\"box-login\">-->\n<!--    <div class=\"head\" style=\"background-color: white;padding: 30px;\">-->\n\n<!--      <div class=\"logo\">-->\n<!--        <img src=\"assets/images/quoc_huy.png\">-->\n<!--      </div>-->\n\n<!--      <div class=\"logo-text\">{{ 'login.logoTextTop' | translate}} <br>{{ 'login.logoTextBottom' | translate}}</div>-->\n\n<!--    </div>-->\n<!--    <div class=\"body\">-->\n<!--      <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"inputUser\" class=\"login100-form validate-form\">-->\n<!--        <input type=\"hidden\" name=\"csrfPreventionSalt\" value=\"QCl8GyurMsXbxiWqvkcs\"/>-->\n<!--        <div class=\"form-group\">-->\n<!--          <div class=\"input-icon\">-->\n<!--            <input  (keyup)=\"trimValue($event)\" class=\"form-control\" formControlName=\"userName\"-->\n<!--                   [ngClass]=\"{'status-danger': this.inputUser.get('userName').errors}\" type=\"text\"-->\n<!--                   placeholder=\"{{ 'login.userName' | translate}}\">-->\n<!--            <span class=\"icon\"><img src=\"assets/images/business-contact-86.svg\"></span>-->\n<!--          </div>-->\n<!--          <ngx-inline-message [message]=\"'login.userName'|translate\" [formName]=\"inputUser.get('userName')\"></ngx-inline-message>-->\n<!--        </div>-->\n<!--        <div class=\"form-group\">-->\n<!--          <div class=\"input-icon -show\">-->\n<!--            <input   (keyup)=\"trimValue($event)\" [type]=\"getInputType(1)\" formControlName=\"oldPass\"-->\n<!--                   [ngClass]=\"{'status-danger': this.inputUser.get('oldPass').errors}\" type=\"password\"-->\n<!--                   class=\"form-control\" placeholder=\"{{ 'login.oldPass' | translate}}\">-->\n\n<!--            <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>-->\n<!--            <span id=\"passwordShow\" (click)=\"toggleShowPassword(1)\" class=\"icon-show fa  fa-eye\"-->\n<!--                  style=\"margin-right:1em;\">-->\n<!--\t\t\t\t\t\t\t\t</span>-->\n<!--          </div>-->\n<!--          <ngx-inline-message [message]=\"'login.oldPass'|translate\" [formName]=\"inputUser.get('oldPass')\"></ngx-inline-message>-->\n<!--        </div>-->\n\n\n<!--        <div class=\"form-group\">-->\n<!--          <div class=\"input-icon -show\">-->\n<!--            <input  (keyup)=\"trimValue($event)\" [type]=\"getInputType(2)\" formControlName=\"newPass\" type=\"password\" class=\"form-control\"-->\n<!--                   placeholder=\"{{ 'login.newPass' | translate}}\" [ngClass]=\"{'status-danger': this.inputUser.get('newPass').errors}\">-->\n\n<!--            <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>-->\n<!--            <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(2)\" style=\"margin-right:1em;\">-->\n<!--\t\t\t\t\t\t\t\t</span>-->\n<!--          </div>-->\n<!--          <ngx-inline-message [message]=\"'login.newPass'|translate\" [formName]=\"inputUser.get('newPass')\"></ngx-inline-message>-->\n<!--        </div>-->\n\n\n<!--        <div class=\"form-group\">-->\n<!--          <div class=\"input-icon -show\">-->\n<!--            <input  (keyup)=\"trimValue($event)\" [type]=\"getInputType(3)\" formControlName=\"comPass\" type=\"password\" class=\"form-control\"-->\n<!--                   placeholder=\"{{ 'login.comPass' | translate}}\" [ngClass]=\"{'status-danger': this.inputUser.get('comPass').errors}\">-->\n\n<!--            <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>-->\n<!--            <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(3)\" style=\"margin-right:1em;\">-->\n<!--\t\t\t\t\t\t\t\t</span>-->\n<!--          </div>-->\n<!--          <ngx-inline-message [message]=\"'login.comPass'|translate\" [formName]=\"inputUser.get('comPass')\"></ngx-inline-message>-->\n<!--        </div>-->\n\n\n<!--        <div class=\"actions center\" style=\"margin-top: 2em;\">-->\n<!--          <button class=\"btn btn-main change\">{{ 'login.changePass' | translate}}</button>-->\n<!--          <ul class=\"links\" style=\"text-align: center\">-->\n<!--            <li><a routerLink=\"/auths/login\">{{ 'login.login' | translate}}</a></li>-->\n<!--          </ul>-->\n<!--        </div>-->\n<!--      </form>-->\n<!--    </div>-->\n<!--  </div>-->\n\n<div class=\"container-login100\" [nbSpinner]=\"isLoad\" nbSpinnerSize=\"giant\" nbSpinnerStatus=\"primary\"\n     style=\"background-image: url('assets/images/bg-01.jpg');\">\n  <div class=\"modal is-open\">\n\n    <div class=\"modal-container\">\n      <div class=\"modal-left\" style=\" margin-bottom: 5vh;\">\n        <h1 class=\"modal-title\"\n            style=\"color: #292D34; text-align: center; margin-bottom: 5vh;\">{{ 'login.title' | translate}}</h1>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"inputUser\">\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(1)\" formControlName=\"userName\" type=\"text\"\n                     class=\"form-control\" placeholder=\"{{ 'login.name' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('userName').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/business-contact-86.svg\"></span>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(1)\" formControlName=\"oldPass\" type=\"password\"\n                     class=\"form-control\" placeholder=\"{{ 'login.oldPass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('oldPass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(1)\" style=\"margin-right:1em;\">\n          \t\t\t\t\t\t\t\t</span>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(1)\" formControlName=\"newPass\" type=\"password\"\n                     class=\"form-control\" placeholder=\"{{ 'login.newPass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('newPass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(1)\" style=\"margin-right:1em;\">\n          \t\t\t\t\t\t\t\t</span>\n            </div>\n          </div>\n          <ngx-inline-message [message]=\"'login.newPass'|translate\"\n                              [formName]=\"inputUser.get('newPass')\"></ngx-inline-message>\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(2)\" formControlName=\"comPass\" type=\"password\"\n                     class=\"form-control\" placeholder=\"{{ 'login.comPass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('comPass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(2)\" style=\"margin-right:1em;\">\n          \t\t\t\t\t\t\t\t</span>\n            </div>\n          </div>\n          <ngx-inline-message [message]=\"'login.comPass'|translate\"\n                              [formName]=\"inputUser.get('comPass')\"></ngx-inline-message>\n          <div class=\"modal-buttons\" style=\"margin-top: 2em;\">\n            <a routerLink=\"/auths/login\">{{ 'login.login' | translate}}</a>\n            <button class=\"btn btn-main\" [disabled]=\"inputUser.invalid\">{{ 'login.changePass' | translate}}</button>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-right\">\n        <img\n          src=\"https://images.unsplash.com/photo-1512486130939-2c4f79935e4f?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=dfd2ec5a01006fd8c4d7592a381d3776&auto=format&fit=crop&w=1000&q=80\"\n          alt=\"\">\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n","import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\n\n\nimport {LoginComponent} from './logins/login.component';\nimport {AuthsComponent} from './auths.component';\nimport {ConfirmEmailComponent} from './confirmEmail/confirmEmail.component';\nimport {ChangePassEmailComponent} from './changePassEmail/changePassEmail.component';\nimport {ChangePassComponent} from './changePass/changePass.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthsComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'changePass',\n        component: ChangePassComponent,\n      },\n      {\n        path: 'changePass/:key',\n        component: ChangePassEmailComponent,\n      },\n      {\n        path: 'confirmEmail',\n        component: ConfirmEmailComponent,\n      },\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthsRoutingModule {\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ToastrService} from '../../@core/mock/toastr-service';\nimport {notSpaceLogin, validPassword} from '../../validator';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LoginService} from '../../@core/services/login.service';\n\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'ngx-login',\n  templateUrl: './changePassEmail.component.html',\n  styleUrls: ['./changePassEmail.component.scss'],\n})\n\n\nexport class ChangePassEmailComponent implements OnInit {\n\n  inputUser: FormGroup;\n  data: any;\n  body: any;\n  token1: string;\n  submitted = false;\n  isLoad: boolean;\n\n  showPassword = false;\n  showPassword1 = false;\n\n  getInputType(a: number) {\n    if (a === 1) {\n      if (this.showPassword) {\n        return 'text';\n      }\n    }\n    if (a === 2) {\n      if (this.showPassword1) {\n        return 'text';\n      }\n    }\n    return 'password';\n  }\n\n  toggleShowPassword(a: number) {\n    if (a === 1) {\n      this.showPassword = !this.showPassword;\n    }\n    if (a === 2) {\n      this.showPassword1 = !this.showPassword1;\n    }\n  }\n\n  trimValue(event) {\n    event.target.value = event.target.value.trim();\n  }\n\n  constructor(private http: LoginService,\n              private toastr: ToastrService,\n              private translateService: TranslateService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.token1 = params['key'];\n    });\n  }\n\n  initForm() {\n    this.inputUser = new FormGroup({\n      newPass: new FormControl('', [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n      comPass: new FormControl('', [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n      key: new FormControl(),\n    }, {\n      validators: validPassword,\n    });\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  onSubmit() {\n    this.inputUser.value.key = this.token1;\n    this.isLoad = true;\n    this.submitted = true;\n    if (this.inputUser.valid) {\n      this.http.changePass(this.inputUser.value).subscribe(res => {\n        if (res.status === 200) {\n          this.submitted = false;\n          try {\n            this.body = res.body.data;\n          } catch {\n            this.body = '';\n          } finally {\n            this.isLoad = false;\n          }\n          this.toastr.showToast('success', this.translateService.instant('login.notification'), this.body);\n          this.router.navigate(['auths/login']);\n        }\n      }, err => {\n        const title = this.translateService.instant('login.error');\n        try {\n          this.body = err.error.detail;\n        } catch {\n          this.body = '';\n        } finally {\n          this.isLoad = false;\n        }\n        this.toastr.showToast('danger', title, this.body);\n        if (err.status === 401) {\n          this.router.navigate(['auths/login']);\n        }\n      });\n    } else {\n      this.isLoad = false;\n    }\n  }\n\n}\n","<div class=\"container-login100\" [nbSpinner]=\"isLoad\" nbSpinnerSize=\"giant\" nbSpinnerStatus=\"primary\"\n     style=\"background-image: url('assets/images/bg-01.jpg');\">\n  <div class=\"modal is-open\">\n\n    <div class=\"modal-container\">\n      <div class=\"modal-left\" style=\" margin-bottom: 5vh;\">\n        <h1 class=\"modal-title\"\n            style=\"color: #292D34; text-align: center; margin-bottom: 5vh;\">{{ 'login.title' | translate}}</h1>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"inputUser\">\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(1)\" formControlName=\"newPass\" type=\"password\"\n                     class=\"form-control\" placeholder=\"{{ 'login.newPass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('newPass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(1)\" style=\"margin-right:1em;\">\n          \t\t\t\t\t\t\t\t</span>\n            </div>\n          </div>\n          <ngx-inline-message [message]=\"'login.newPass'|translate\"\n                              [formName]=\"inputUser.get('newPass')\"></ngx-inline-message>\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(2)\" formControlName=\"comPass\" type=\"password\"\n                     class=\"form-control\" placeholder=\"{{ 'login.comPass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('comPass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(2)\" style=\"margin-right:1em;\">\n          \t\t\t\t\t\t\t\t</span>\n            </div>\n          </div>\n          <ngx-inline-message [message]=\"'login.comPass'|translate\"\n                              [formName]=\"inputUser.get('comPass')\"></ngx-inline-message>\n          <div class=\"modal-buttons\" style=\"margin-top: 2em;\">\n            <a routerLink=\"/auths/login\">{{ 'login.login' | translate}}</a>\n            <button class=\"btn btn-main\" [disabled]=\"inputUser.invalid\">{{ 'login.changePass' | translate}}</button>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-right\">\n        <img\n          src=\"https://images.unsplash.com/photo-1512486130939-2c4f79935e4f?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=dfd2ec5a01006fd8c4d7592a381d3776&auto=format&fit=crop&w=1000&q=80\"\n          alt=\"\">\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n"],"sourceRoot":"webpack:///"}