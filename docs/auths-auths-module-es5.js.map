{"version":3,"sources":["webpack:///src/app/auths/logins/login.component.ts","webpack:///src/app/auths/logins/login.component.html","webpack:///src/app/auths/auths.module.ts","webpack:///src/app/auths/confirmEmail/confirmEmail.component.ts","webpack:///src/app/auths/confirmEmail/confirmEmail.component.html","webpack:///src/app/auths/auths.component.ts","webpack:///src/app/auths/changePass/changePass.component.ts","webpack:///src/app/auths/changePass/changePass.component.html","webpack:///src/app/auths/auths-routing.module.ts","webpack:///src/app/auths/changePassEmail/changePassEmail.component.ts","webpack:///src/app/auths/changePassEmail/changePassEmail.component.html"],"names":["LoginComponent","loginService","router","route","translateService","toastr","captchaError","submitted","showPassword","hideLogin","document","querySelector","classList","add","style","overflow","initForm","inputUser","name","getCookie","maxLength","required","pass","minLength","remember","event","target","value","trim","isLoad","valid","cookie","login","subscribe","res","status","console","log","navigate","localStorage","setItem","JSON","stringify","body","listObjects","httpHeaders","Authorization","customUserDetails","fullname","err","title","instant","body1","error","detail","showToast","cname","decodedCookie","decodeURIComponent","ca","split","i","length","c","charAt","substring","indexOf","onSubmit","trimValue","toggleShowPassword","encapsulation","None","selector","templateUrl","styleUrls","AuthsModule","provide","useValue","siteKey","imports","declarations","providers","ConfirmEmailComponent","http","email","sendSimpleEmail","data","AuthsComponent","template","ChangePassComponent","showPassword1","showPassword2","a","userName","oldPass","newPass","comPass","validators","changePass","routes","path","component","children","redirectTo","pathMatch","AuthsRoutingModule","forChild","exports","ChangePassEmailComponent","activatedRoute","params","token1","key"],"mappings":"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","file":"auths-auths-module-es5.js","sourcesContent":["import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ToastrService} from '../../@core/mock/toastr-service';\nimport {checkUser, notSpaceLogin} from '../../validator';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {LoginService} from '../../@core/services/login.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'ngx-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\n\n\nexport class LoginComponent implements OnInit {\n  ngOnInit() {\n    this.initForm();\n  }\n\n  constructor(private loginService: LoginService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private translateService: TranslateService,\n              private toastr: ToastrService) {\n\n  }\n\n\n  captchaError: boolean = false;\n  inputUser: FormGroup;\n  data: any;\n  isLoad: boolean;\n  submitted = false;\n  showPassword = false;\n\n  initForm() {\n    this.inputUser = new FormGroup({\n      name: new FormControl(this.getCookie('name'), [checkUser, Validators.maxLength(50), Validators.required]),\n      pass: new FormControl(this.getCookie('pass'), [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n      remember: new FormControl(this.getCookie('remember'), []),\n      // recaptchaReactive: new FormControl(null, [Validators.required])\n    });\n  }\n\n  hideLogin = () => {\n    document.querySelector('.modal').classList.add('is-open');\n    document.querySelector('body').style.overflow = 'hidden';\n  };\n\n  trimValue(event) {\n    event.target.value = event.target.value.trim();\n  }\n\n  getInputType() {\n    if (this.showPassword) {\n      return 'text';\n    }\n    return 'password';\n  }\n\n  toggleShowPassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  onSubmit() {\n    this.isLoad = true;\n    this.submitted = true;\n    this.captchaError = true;\n    if (this.inputUser.valid) {\n      if (this.inputUser.value.remember) {\n        document.cookie = 'name=' + this.inputUser.value.name;\n        document.cookie = 'pass=' + this.inputUser.value.pass;\n        document.cookie = 'remember=' + true;\n      } else {\n        document.cookie = 'name=' + '';\n        document.cookie = 'pass=' + '';\n        document.cookie = 'remember=' + false;\n      }\n      this.loginService.login(this.inputUser.value).subscribe(res => {\n        this.submitted = false;\n        if (res.status === 200) {\n          console.log(res);\n          this.router.navigate(['/admin/home']);\n          localStorage.setItem('objects', JSON.stringify(res.body.listObjects));\n          localStorage.setItem('httpHeaders', res.body.httpHeaders.Authorization);\n          localStorage.setItem('users', res.body.customUserDetails.fullname);\n          localStorage.setItem('userDetails', JSON.stringify(res.body.customUserDetails));\n          this.isLoad = false;\n          this.captchaError = false;\n\n        }\n      }, err => {\n        const title = this.translateService.instant('login.error');\n        let body1: any;\n        try {\n          body1 = err.error.detail;\n        } catch {\n          body1 = '';\n        } finally {\n          this.isLoad = false;\n          this.captchaError = false;\n          this.toastr.showToast('danger', title, body1);\n          // grecaptcha.reset();\n        }\n      });\n    } else {\n      this.isLoad = false;\n    }\n  }\n\n  getCookie(cname) {\n    const name = cname + '=';\n    const decodedCookie = decodeURIComponent(document.cookie);\n    const ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return '';\n  }\n}\n","<div class=\"container-login100\" [nbSpinner]=\"isLoad\" nbSpinnerSize=\"giant\" nbSpinnerStatus=\"primary\"\n     style=\"background-image: url('assets/images/bg-01.jpg');\">\n  <div class=\"modal is-open\">\n    <div class=\"modal-container\">\n      <div class=\"modal-left\" style=\" margin-bottom: 5vh;\">\n        <h1 class=\"modal-title\" style=\"color: #292D34; text-align: center; margin-bottom: 5vh;\">{{ 'login.title' | translate}}</h1>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"inputUser\">\n          <div class=\"form-group\">\n            <div class=\"input-icon\">\n              <input class=\"form-control\" name=\"name\" formControlName=\"name\" (keyup)=\"trimValue($event)\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('name').errors}\" type=\"text\"\n                     placeholder=\"{{ 'login.name' | translate}}\">\n              <span class=\"icon\"><img src=\"assets/images/business-contact-86.svg\"></span>\n            </div>\n\n          </div>\n          <ngx-inline-message [message]=\"'login.name'|translate\"\n                              [formName]=\"inputUser.get('name')\"></ngx-inline-message>\n          <div class=\"form-group\">-->\n            <div class=\"input-icon -show\">\n              <input [type]=\"getInputType()\" name=\"pass\" (keyup)=\"trimValue($event)\" fullWidth\n                     formControlName=\"pass\" type=\"password\" class=\"form-control\"\n                     placeholder=\"{{ 'login.pass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('pass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span id=\"passwordShow\" (click)=\"toggleShowPassword()\" class=\"icon-show fa  fa-eye\"\n                    style=\"margin-right:1em;\">\n              \t\t\t\t\t\t\t\t</span>\n            </div>\n            <ngx-inline-message [message]=\"'login.pass'|translate\"\n                                [formName]=\"inputUser.get('pass')\"></ngx-inline-message>\n          </div>\n\n          <div class=\"form-group form-check\" style=\"margin-top: 0.5rem;\">\n            <input type=\"checkbox\" name=\"remember\" id=\"remember\" formControlName=\"remember\"\n                   class=\"form-check-input\"/>\n            <label for=\"remember\" class=\"form-check-label\"\n                   style=\"color: #292D34 !important;justify-content: center;\">{{ 'login.remember' | translate}}</label>\n          </div>\n<!--          <div class=\"form-group\">-->\n<!--            <re-captcha style=\"display: flex; justify-content: center;\"-->\n<!--                        formControlName=\"recaptchaReactive\"></re-captcha>-->\n<!--          </div>-->\n<!--          <ngx-inline-message [message]=\"'login.recaptchaReactive'|translate\"-->\n<!--                              [formName]=\"inputUser.get('recaptchaReactive')\"></ngx-inline-message>-->\n          <div class=\"modal-buttons\">\n            <a routerLink=\"/auths/confirmEmail\">{{ 'login.confirmEmail' | translate}}</a>\n            <button class=\"btn btn-main\" [disabled]=\"inputUser.invalid\">{{ 'login.login' | translate}}</button>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-right\">\n        <img\n          src=\"https://images.unsplash.com/photo-1512486130939-2c4f79935e4f?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=dfd2ec5a01006fd8c4d7592a381d3776&auto=format&fit=crop&w=1000&q=80\"\n          alt=\"\">\n      </div>\n    </div>\n\n  </div>\n</div>\n\n","import {NgModule} from '@angular/core';\nimport {\n  NbAlertModule,\n  NbCardModule,\n  NbCheckboxModule,\n  NbIconModule,\n  NbInputModule,\n  NbLayoutModule,\n  NbMenuModule,\n  NbSpinnerModule,\n} from '@nebular/theme';\n\nimport {ThemeModule} from '../@theme/theme.module';\nimport {AuthsRoutingModule} from './auths-routing.module';\nimport {LoginComponent} from './logins/login.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AuthsComponent} from './auths.component';\nimport {ConfirmEmailComponent} from './confirmEmail/confirmEmail.component';\nimport {ChangePassEmailComponent} from './changePassEmail/changePassEmail.component';\nimport {RECAPTCHA_SETTINGS, RecaptchaFormsModule, RecaptchaModule, RecaptchaSettings} from 'ng-recaptcha';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {SharedModule} from '../shares/shared.module';\nimport { ChangePassComponent } from './changePass/changePass.component';\n\n\n@NgModule({\n  imports: [\n    AuthsRoutingModule,\n    ThemeModule,\n    NbMenuModule,\n    NbCardModule,\n    NbAlertModule,\n    FormsModule,\n    NbInputModule,\n    NbCheckboxModule,\n    NbIconModule,\n    ReactiveFormsModule,\n    NbLayoutModule,\n    NbSpinnerModule,\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    SharedModule,\n  ],\n  declarations: [\n    ChangePassComponent,\n    LoginComponent,\n    AuthsComponent,\n    ConfirmEmailComponent,\n    ChangePassEmailComponent,\n  ],\n  providers: [\n    {\n      provide: RECAPTCHA_SETTINGS,\n      useValue: {\n        siteKey: '6Ldch8gZAAAAAOAujSVYWFyoWkTaNgBNzE6qyxwg',\n      } as RecaptchaSettings,\n    }]\n})\nexport class AuthsModule {\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {ToastrService} from '../../@core/mock/toastr-service';\nimport {validEmail} from '../../validator';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LoginService} from '../../@core/services/login.service';\n\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'ngx-confirm-email',\n  templateUrl: './confirmEmail.component.html',\n  styleUrls: ['./confirmEmail.component.scss'],\n})\n\n\nexport class ConfirmEmailComponent implements OnInit {\n\n\n  constructor(private http: LoginService,\n              private toastr: ToastrService,\n              private translateService: TranslateService,\n              private router: Router) {\n\n  }\n\n  inputUser: FormGroup;\n  data: any;\n  isLoad: boolean;\n  body: any;\n  submitted = false;\n\n  initForm() {\n    this.inputUser = new FormGroup({\n      email: new FormControl('', [validEmail, Validators.required]),\n    });\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  trimValue(event) {\n    event.target.value = event.target.value.trim();\n  }\n\n  onSubmit() {\n    this.isLoad = true;\n    this.submitted = true;\n    if (this.inputUser.valid) {\n      this.http.sendSimpleEmail(this.inputUser.value).subscribe(res => {\n        if (res.status === 200) {\n          this.submitted = false;\n          this.isLoad = false;\n          try {\n            this.body = res.body.data;\n          } catch {\n            this.body = '';\n          }\n          this.toastr.showToast('success', this.translateService.instant('login.notification'), this.body);\n          this.router.navigate(['auths/login']);\n\n        }\n      }, err => {\n        const title = this.translateService.instant('login.error');\n        let body: any;\n        try {\n          body = err.error.detail;\n        } catch {\n          body = '';\n        } finally {\n          this.isLoad = false;\n          this.toastr.showToast('danger', title, body);\n        }\n      });\n    } else {\n      this.isLoad = false;\n    }\n  }\n}\n","<div class=\"container-login100\" [nbSpinner]=\"isLoad\" nbSpinnerSize=\"giant\" nbSpinnerStatus=\"primary\"\n     style=\"background-image: url('assets/images/bg-01.jpg');\">\n  <div class=\"modal is-open\">\n\n    <div class=\"modal-container\">\n      <div class=\"modal-left\" style=\" margin-bottom: 5vh;\">\n        <h1 class=\"modal-title\"\n            style=\"color: #292D34; text-align: center; margin-bottom: 5vh;\">{{ 'login.title' | translate}}</h1>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"inputUser\">\n          <div class=\"form-group\">-->\n            <div class=\"input-icon\">\n              <input class=\"form-control\" formControlName=\"email\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('email').errors}\" type=\"text\"\n                     placeholder=\"{{ 'login.email' | translate}}\">\n              <span class=\"icon\" style=\"width: 18px;\"><img src=\"assets/images/gmail.svg\"></span>\n            </div>\n          </div>\n          <ngx-inline-message [message]=\"'login.emailC'|translate\"\n                              [formName]=\"inputUser.get('email')\"></ngx-inline-message>\n          <div class=\"modal-buttons\" style=\"margin-top: 2em;\">\n            <a routerLink=\"/auths/login\">{{ 'login.login' | translate}}</a>\n            <button class=\"btn btn-main\" [disabled]=\"inputUser.invalid\">{{ 'login.sendEmail' | translate}}</button>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-right\">\n        <img\n          src=\"https://images.unsplash.com/photo-1512486130939-2c4f79935e4f?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=dfd2ec5a01006fd8c4d7592a381d3776&auto=format&fit=crop&w=1000&q=80\"\n          alt=\"\">\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n","import {Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ngx-auths',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ngx-two-columns-layout>\n      <router-outlet></router-outlet>\n      </ngx-two-columns-layout>\n  `,\n})\nexport class AuthsComponent  {\n}\n\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ToastrService} from '../../@core/mock/toastr-service';\nimport {checkUser, notSpaceLogin, validPassword} from '../../validator';\nimport {Router} from '@angular/router';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {LoginService} from '../../@core/services/login.service';\n\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'ngx-login',\n  templateUrl: './changePass.component.html',\n  styleUrls: ['./changePass.component.scss'],\n})\n\n\nexport class ChangePassComponent implements OnInit {\n\n  inputUser: FormGroup;\n  data: any;\n  body: any;\n  submitted = false;\n  isLoad: boolean;\n\n\n  constructor(private http: LoginService,\n              private toastr: ToastrService,\n              private translateService: TranslateService,\n              private router: Router) {\n\n  }\n\n  showPassword = false;\n  showPassword1 = false;\n  showPassword2 = false;\n\n  getInputType(a: number) {\n    if (a === 1) {\n      if (this.showPassword) {\n        return 'text';\n      }\n    }\n    if (a === 2) {\n      if (this.showPassword1) {\n        return 'text';\n      }\n    }\n    if (a === 3) {\n      if (this.showPassword2) {\n        return 'text';\n      }\n    }\n    return 'password';\n  }\n\n  toggleShowPassword(a: number) {\n    if (a === 1) {\n      this.showPassword = !this.showPassword;\n    }\n    if (a === 2) {\n      this.showPassword1 = !this.showPassword1;\n    }\n    if (a === 3) {\n      this.showPassword2 = !this.showPassword2;\n    }\n  }\n\n  trimValue(event) {\n    event.target.value = event.target.value.trim();\n  }\n\n  initForm() {\n    this.inputUser = new FormGroup({\n        userName: new FormControl(this.data?.userName, [checkUser, Validators.maxLength(50), Validators.required]),\n        oldPass: new FormControl('', [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n        newPass: new FormControl('', [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n        comPass: new FormControl('', [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n      },\n      {\n        validators: validPassword,\n      });\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  onSubmit() {\n    this.isLoad = true;\n    this.submitted = true;\n    if (this.inputUser.valid) {\n      this.http.changePass(this.inputUser.value).subscribe(res => {\n        if (res.status === 200) {\n          this.submitted = false;\n          try {\n            this.body = res.body.data;\n          } catch {\n            this.body = '';\n          } finally {\n            this.isLoad = false;\n          }\n          this.toastr.showToast('success', this.translateService.instant('login.notification'), this.body);\n          this.router.navigate(['auths/login']);\n        }\n      }, err => {\n        const title = this.translateService.instant('login.error');\n        try {\n          this.body = err.error.detail;\n        } catch {\n          this.body = '';\n        } finally {\n          this.isLoad = false;\n        }\n        this.toastr.showToast('danger', title, this.body);\n      });\n    } else {\n      this.isLoad = false;\n    }\n  }\n\n}\n","<!--<div class=\"wrapper-login\" [nbSpinner]=\"isLoad\" nbSpinnerSize=\"giant\" nbSpinnerStatus=\"primary\"-->\n<!--     style=\"background-image: url('assets/images/bg.jpg');\">-->\n<!--  <div class=\"bg\" style=\"background-image: url('assets/images/bg.jpg');\"></div>-->\n<!--  <div class=\"box-login\">-->\n<!--    <div class=\"head\" style=\"background-color: white;padding: 30px;\">-->\n\n<!--      <div class=\"logo\">-->\n<!--        <img src=\"assets/images/quoc_huy.png\">-->\n<!--      </div>-->\n\n<!--      <div class=\"logo-text\">{{ 'login.logoTextTop' | translate}} <br>{{ 'login.logoTextBottom' | translate}}</div>-->\n\n<!--    </div>-->\n<!--    <div class=\"body\">-->\n<!--      <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"inputUser\" class=\"login100-form validate-form\">-->\n<!--        <input type=\"hidden\" name=\"csrfPreventionSalt\" value=\"QCl8GyurMsXbxiWqvkcs\"/>-->\n<!--        <div class=\"form-group\">-->\n<!--          <div class=\"input-icon\">-->\n<!--            <input  (keyup)=\"trimValue($event)\" class=\"form-control\" formControlName=\"userName\"-->\n<!--                   [ngClass]=\"{'status-danger': this.inputUser.get('userName').errors}\" type=\"text\"-->\n<!--                   placeholder=\"{{ 'login.userName' | translate}}\">-->\n<!--            <span class=\"icon\"><img src=\"assets/images/business-contact-86.svg\"></span>-->\n<!--          </div>-->\n<!--          <ngx-inline-message [message]=\"'login.userName'|translate\" [formName]=\"inputUser.get('userName')\"></ngx-inline-message>-->\n<!--        </div>-->\n<!--        <div class=\"form-group\">-->\n<!--          <div class=\"input-icon -show\">-->\n<!--            <input   (keyup)=\"trimValue($event)\" [type]=\"getInputType(1)\" formControlName=\"oldPass\"-->\n<!--                   [ngClass]=\"{'status-danger': this.inputUser.get('oldPass').errors}\" type=\"password\"-->\n<!--                   class=\"form-control\" placeholder=\"{{ 'login.oldPass' | translate}}\">-->\n\n<!--            <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>-->\n<!--            <span id=\"passwordShow\" (click)=\"toggleShowPassword(1)\" class=\"icon-show fa  fa-eye\"-->\n<!--                  style=\"margin-right:1em;\">-->\n<!--\t\t\t\t\t\t\t\t</span>-->\n<!--          </div>-->\n<!--          <ngx-inline-message [message]=\"'login.oldPass'|translate\" [formName]=\"inputUser.get('oldPass')\"></ngx-inline-message>-->\n<!--        </div>-->\n\n\n<!--        <div class=\"form-group\">-->\n<!--          <div class=\"input-icon -show\">-->\n<!--            <input  (keyup)=\"trimValue($event)\" [type]=\"getInputType(2)\" formControlName=\"newPass\" type=\"password\" class=\"form-control\"-->\n<!--                   placeholder=\"{{ 'login.newPass' | translate}}\" [ngClass]=\"{'status-danger': this.inputUser.get('newPass').errors}\">-->\n\n<!--            <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>-->\n<!--            <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(2)\" style=\"margin-right:1em;\">-->\n<!--\t\t\t\t\t\t\t\t</span>-->\n<!--          </div>-->\n<!--          <ngx-inline-message [message]=\"'login.newPass'|translate\" [formName]=\"inputUser.get('newPass')\"></ngx-inline-message>-->\n<!--        </div>-->\n\n\n<!--        <div class=\"form-group\">-->\n<!--          <div class=\"input-icon -show\">-->\n<!--            <input  (keyup)=\"trimValue($event)\" [type]=\"getInputType(3)\" formControlName=\"comPass\" type=\"password\" class=\"form-control\"-->\n<!--                   placeholder=\"{{ 'login.comPass' | translate}}\" [ngClass]=\"{'status-danger': this.inputUser.get('comPass').errors}\">-->\n\n<!--            <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>-->\n<!--            <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(3)\" style=\"margin-right:1em;\">-->\n<!--\t\t\t\t\t\t\t\t</span>-->\n<!--          </div>-->\n<!--          <ngx-inline-message [message]=\"'login.comPass'|translate\" [formName]=\"inputUser.get('comPass')\"></ngx-inline-message>-->\n<!--        </div>-->\n\n\n<!--        <div class=\"actions center\" style=\"margin-top: 2em;\">-->\n<!--          <button class=\"btn btn-main change\">{{ 'login.changePass' | translate}}</button>-->\n<!--          <ul class=\"links\" style=\"text-align: center\">-->\n<!--            <li><a routerLink=\"/auths/login\">{{ 'login.login' | translate}}</a></li>-->\n<!--          </ul>-->\n<!--        </div>-->\n<!--      </form>-->\n<!--    </div>-->\n<!--  </div>-->\n\n<div class=\"container-login100\" [nbSpinner]=\"isLoad\" nbSpinnerSize=\"giant\" nbSpinnerStatus=\"primary\"\n     style=\"background-image: url('assets/images/bg-01.jpg');\">\n  <div class=\"modal is-open\">\n\n    <div class=\"modal-container\">\n      <div class=\"modal-left\" style=\" margin-bottom: 5vh;\">\n        <h1 class=\"modal-title\"\n            style=\"color: #292D34; text-align: center; margin-bottom: 5vh;\">{{ 'login.title' | translate}}</h1>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"inputUser\">\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(1)\" formControlName=\"userName\" type=\"text\"\n                     class=\"form-control\" placeholder=\"{{ 'login.name' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('userName').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/business-contact-86.svg\"></span>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(1)\" formControlName=\"oldPass\" type=\"password\"\n                     class=\"form-control\" placeholder=\"{{ 'login.oldPass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('oldPass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(1)\" style=\"margin-right:1em;\">\n          \t\t\t\t\t\t\t\t</span>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(1)\" formControlName=\"newPass\" type=\"password\"\n                     class=\"form-control\" placeholder=\"{{ 'login.newPass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('newPass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(1)\" style=\"margin-right:1em;\">\n          \t\t\t\t\t\t\t\t</span>\n            </div>\n          </div>\n          <ngx-inline-message [message]=\"'login.newPass'|translate\"\n                              [formName]=\"inputUser.get('newPass')\"></ngx-inline-message>\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(2)\" formControlName=\"comPass\" type=\"password\"\n                     class=\"form-control\" placeholder=\"{{ 'login.comPass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('comPass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(2)\" style=\"margin-right:1em;\">\n          \t\t\t\t\t\t\t\t</span>\n            </div>\n          </div>\n          <ngx-inline-message [message]=\"'login.comPass'|translate\"\n                              [formName]=\"inputUser.get('comPass')\"></ngx-inline-message>\n          <div class=\"modal-buttons\" style=\"margin-top: 2em;\">\n            <a routerLink=\"/auths/login\">{{ 'login.login' | translate}}</a>\n            <button class=\"btn btn-main\" [disabled]=\"inputUser.invalid\">{{ 'login.changePass' | translate}}</button>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-right\">\n        <img\n          src=\"https://images.unsplash.com/photo-1512486130939-2c4f79935e4f?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=dfd2ec5a01006fd8c4d7592a381d3776&auto=format&fit=crop&w=1000&q=80\"\n          alt=\"\">\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n","import {RouterModule, Routes} from '@angular/router';\nimport {NgModule} from '@angular/core';\n\n\nimport {LoginComponent} from './logins/login.component';\nimport {AuthsComponent} from './auths.component';\nimport {ConfirmEmailComponent} from './confirmEmail/confirmEmail.component';\nimport {ChangePassEmailComponent} from './changePassEmail/changePassEmail.component';\nimport {ChangePassComponent} from './changePass/changePass.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthsComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent,\n      },\n      {\n        path: 'changePass',\n        component: ChangePassComponent,\n      },\n      {\n        path: 'changePass/:key',\n        component: ChangePassEmailComponent,\n      },\n      {\n        path: 'confirmEmail',\n        component: ConfirmEmailComponent,\n      },\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthsRoutingModule {\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\n\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ToastrService} from '../../@core/mock/toastr-service';\nimport {notSpaceLogin, validPassword} from '../../validator';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LoginService} from '../../@core/services/login.service';\n\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'ngx-login',\n  templateUrl: './changePassEmail.component.html',\n  styleUrls: ['./changePassEmail.component.scss'],\n})\n\n\nexport class ChangePassEmailComponent implements OnInit {\n\n  inputUser: FormGroup;\n  data: any;\n  body: any;\n  token1: string;\n  submitted = false;\n  isLoad: boolean;\n\n  showPassword = false;\n  showPassword1 = false;\n\n  getInputType(a: number) {\n    if (a === 1) {\n      if (this.showPassword) {\n        return 'text';\n      }\n    }\n    if (a === 2) {\n      if (this.showPassword1) {\n        return 'text';\n      }\n    }\n    return 'password';\n  }\n\n  toggleShowPassword(a: number) {\n    if (a === 1) {\n      this.showPassword = !this.showPassword;\n    }\n    if (a === 2) {\n      this.showPassword1 = !this.showPassword1;\n    }\n  }\n\n  trimValue(event) {\n    event.target.value = event.target.value.trim();\n  }\n\n  constructor(private http: LoginService,\n              private toastr: ToastrService,\n              private translateService: TranslateService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.token1 = params['key'];\n    });\n  }\n\n  initForm() {\n    this.inputUser = new FormGroup({\n      newPass: new FormControl('', [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n      comPass: new FormControl('', [notSpaceLogin, Validators.minLength(6), Validators.maxLength(60), Validators.required]),\n      key: new FormControl(),\n    }, {\n      validators: validPassword,\n    });\n  }\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  onSubmit() {\n    this.inputUser.value.key = this.token1;\n    this.isLoad = true;\n    this.submitted = true;\n    if (this.inputUser.valid) {\n      this.http.changePass(this.inputUser.value).subscribe(res => {\n        if (res.status === 200) {\n          this.submitted = false;\n          try {\n            this.body = res.body.data;\n          } catch {\n            this.body = '';\n          } finally {\n            this.isLoad = false;\n          }\n          this.toastr.showToast('success', this.translateService.instant('login.notification'), this.body);\n          this.router.navigate(['auths/login']);\n        }\n      }, err => {\n        const title = this.translateService.instant('login.error');\n        try {\n          this.body = err.error.detail;\n        } catch {\n          this.body = '';\n        } finally {\n          this.isLoad = false;\n        }\n        this.toastr.showToast('danger', title, this.body);\n        if (err.status === 401) {\n          this.router.navigate(['auths/login']);\n        }\n      });\n    } else {\n      this.isLoad = false;\n    }\n  }\n\n}\n","<div class=\"container-login100\" [nbSpinner]=\"isLoad\" nbSpinnerSize=\"giant\" nbSpinnerStatus=\"primary\"\n     style=\"background-image: url('assets/images/bg-01.jpg');\">\n  <div class=\"modal is-open\">\n\n    <div class=\"modal-container\">\n      <div class=\"modal-left\" style=\" margin-bottom: 5vh;\">\n        <h1 class=\"modal-title\"\n            style=\"color: #292D34; text-align: center; margin-bottom: 5vh;\">{{ 'login.title' | translate}}</h1>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"inputUser\">\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(1)\" formControlName=\"newPass\" type=\"password\"\n                     class=\"form-control\" placeholder=\"{{ 'login.newPass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('newPass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(1)\" style=\"margin-right:1em;\">\n          \t\t\t\t\t\t\t\t</span>\n            </div>\n          </div>\n          <ngx-inline-message [message]=\"'login.newPass'|translate\"\n                              [formName]=\"inputUser.get('newPass')\"></ngx-inline-message>\n          <div class=\"form-group\">\n            <div class=\"input-icon -show\">\n              <input (keyup)=\"trimValue($event)\" [type]=\"getInputType(2)\" formControlName=\"comPass\" type=\"password\"\n                     class=\"form-control\" placeholder=\"{{ 'login.comPass' | translate}}\"\n                     [ngClass]=\"{'status-danger': this.inputUser.get('comPass').errors}\">\n              <span class=\"icon\"><img src=\"assets/images/lock.svg\"></span>\n              <span class=\"icon-show fa  fa-eye\" (click)=\"toggleShowPassword(2)\" style=\"margin-right:1em;\">\n          \t\t\t\t\t\t\t\t</span>\n            </div>\n          </div>\n          <ngx-inline-message [message]=\"'login.comPass'|translate\"\n                              [formName]=\"inputUser.get('comPass')\"></ngx-inline-message>\n          <div class=\"modal-buttons\" style=\"margin-top: 2em;\">\n            <a routerLink=\"/auths/login\">{{ 'login.login' | translate}}</a>\n            <button class=\"btn btn-main\" [disabled]=\"inputUser.invalid\">{{ 'login.changePass' | translate}}</button>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-right\">\n        <img\n          src=\"https://images.unsplash.com/photo-1512486130939-2c4f79935e4f?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=dfd2ec5a01006fd8c4d7592a381d3776&auto=format&fit=crop&w=1000&q=80\"\n          alt=\"\">\n      </div>\n    </div>\n\n  </div>\n</div>\n\n\n"]}